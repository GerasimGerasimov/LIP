#include "LIP_5Nx.h"
#include "ramdata.h"
#include "spi.h"


LIP_5Nx::LIP_5Nx(){
    ++RAM_DATA.counter2;
    CountSegment = 5;
}

void LIP_5Nx::setValue(uint8_t data[]){
    for(uint8_t i = CountSegment; i > 0; --i){
        uint8_t symbol = getChar(data[i-1]);
        SPI::getInstance().spi_send(symbol);
    }
}

const char LIP_5Nx::ASCIITable[96] = {
    0x00, 0x86, 0x22, 0x49, 0x2D, 0x6B, 0x53, 0x46,
    0x70, 0x0F, 0x63, 0x46, 0x80, 0x40, 0x80, 0x52,
    0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07,
    0x7F, 0x6F, 0x09, 0x58, 0x58, 0x48, 0x4C, 0xA7,
    0x5D, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71, 0x7B,
    0x74, 0x30, 0x0E, 0x75, 0x38, 0x55, 0x37, 0x5C,
    0x73, 0x67, 0x49, 0x6D, 0x78, 0x1C, 0x3E, 0x7E,
    0x76, 0x6E, 0x5B, 0x02, 0x64, 0x39, 0x23, 0x08,
    0x02, 0x77, 0x7C, 0x58, 0x5E, 0x79, 0x71, 0x7B,
    0x74, 0x30, 0x0E, 0x75, 0x38, 0x55, 0x54, 0x5C,
    0x73, 0x67, 0x50, 0x6D, 0x78, 0x1C, 0x3E, 0x7E,
    0x76, 0x6E, 0x5B, 0x46, 0x30, 0x70, 0x41, 0x00
};

uint8_t LIP_5Nx::getChar(char symbol){
    if(symbol <= 0x20){
        symbol = 0;
    }
    else{
        symbol -= 0x20;
    }

    if(typeKathode){
        return ASCIITable[symbol];
    }
    else{
        return ~ASCIITable[symbol];
    }
}